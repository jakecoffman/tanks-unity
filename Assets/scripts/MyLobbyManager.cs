using UnityEngine;using UnityEngine.Networking;using System.Collections;public class MyLobbyManager : NetworkLobbyManager {    //public override void ServerChangeScene(string sceneName)    //{    //    base.ServerChangeScene(sceneName);    //    Debug.LogError("Server changed scene");    //}    //// Lobby Server stuff    //public override void OnLobbyStartHost()    //{    //    Debug.LogError("OnLobbyStartHost");    //}    //public override void OnLobbyStopHost()    //{    //    Debug.LogError("OnLobbyStopHost");    //}    //public override void OnLobbyStartServer()    //{    //    Debug.LogError("OnLobbyStartServer");    //}    //public override void OnLobbyServerConnect(NetworkConnection conn)    //{    //    Debug.LogError("OnLobbyServerConnect(conn)");    //}    //public override void OnLobbyServerDisconnect(NetworkConnection conn)    //{    //    Debug.LogError("OnLobbyServerDisconnect");    //}    //public override void OnLobbyServerSceneChanged(string sceneName)    //{    //    Debug.LogError("OnLobbyServerSceneChanged");    //}    //public override GameObject OnLobbyServerCreateLobbyPlayer(NetworkConnection conn, short playerControllerId)    //{    //    return null;    //}    //public override GameObject OnLobbyServerCreateGamePlayer(NetworkConnection conn, short playerControllerId)    //{    //    Debug.LogError("OnLobbyServerCreateGamePlayer");    //    return null;    //}    public override void OnLobbyServerPlayerRemoved(NetworkConnection conn, short playerControllerId)    {        Debug.LogError("OnLobbyServerPlayerRemoved");    }    // for users to apply settings from their lobby player object to their in-game player object    public override bool OnLobbyServerSceneLoadedForPlayer(GameObject lobbyPlayer, GameObject gamePlayer)    {         Debug.LogError("OnLobbyServerSceneLoadedForPlayer " + lobbyPlayer.GetInstanceID() + gamePlayer.GetInstanceID());        var startPos = GetStartPosition();        if (startPos != null)        {            Debug.LogError(startPos.position);        } else        {            Debug.LogError("There is no start position yet");        }        return true;    }    public override void OnLobbyServerPlayersReady()    {        //Debug.LogError("OnLobbyServerPlayersReady");        base.OnLobbyServerPlayersReady();    }    // client overrides    public override void OnLobbyClientEnter()    {        //Debug.LogError("OnLobbyClientEnter");    }    public override void OnLobbyClientExit()    {        //Debug.LogError("OnLobbyClientExit");    }    public override void OnLobbyClientConnect(NetworkConnection conn)    {        //Debug.LogError("OnLobbyClientConnect");    }    public override void OnLobbyClientDisconnect(NetworkConnection conn)    {        //Debug.LogError("OnLobbyClientDisconnect");    }    public override void OnLobbyStartClient(NetworkClient lobbyClient)    {        //Debug.LogError("OnLobbyStartClient");    }    public override void OnLobbyStopClient() {         //Debug.LogError("OnLobbyStopClient");    }    public override void OnLobbyClientSceneChanged(NetworkConnection conn)    {        //Debug.LogError("OnLobbyClientSceneChanged");    }    // for users to handle adding a player failed on the server    public override void OnLobbyClientAddPlayerFailed()    {        //Debug.LogError("OnLobbyClientAddPlayerFailed");    }}